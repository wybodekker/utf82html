#!/bin/bash

 Version=1.05
  Myname="${0##*/}"

read -r -d '' doc \
<<'DOC'
= utf82html - convert UTF-8 byte sequences to numeric html entities

= Synopsis
utf82html [options] [file [file...]]	

== Options
-h	print short help
-H	print full documentation
-V	print version

= Description
utf82html reads UTF-8 encoded text from standard input or from one or more
files specified by the argument(s) and writes those to standard output after
replacing any non-ASCII characters with numeric html values.

utf82html is a C binary which can be installed by running this Bash script
with the same name if you give it the -I option.

= Author
[Wybo Dekker](wybodekker@me.com)

= Copyright
Released under the [GNU General Public License](www.gnu.org/copyleft/gpl.html)
DOC

helpsrt() { sed -n '/^= Synopsis/,/^= /p' "$0"|sed '1d;$d'; exit; }
helpall() { sed -n "/^<<'DOC'$/,/^DOC/p" "$0"|sed '1d;$d'|
            less -P"$Myname-${Version/./Â·} (press h for help, q to quit)";exit; }
:<<'DOC' #----------------------------------------------------------------------
= installme
description:	Compiles the C source contained by this script
globals used:	 Myname Version doc source
DOC
#-------------------------------------------------------------------------------
installme() {
   local bin="$PREFIX/bin"
   local target="$bin/$Myname"
   [[ -n $PREFIX ]] || die "You need to define you environment variable PREFIX"
   test -d "$bin" || die "Directory $bin does not exist"
   test -w "$bin" || die "Directory $bin is not writable by you"
   # if the C source exists, it has apparently been edited, and needs to be
   # replaced in the uuencoded part of the script:
   if [[ -e $Myname.c ]]; then
      # remove uuencoded Myname.c from the Myname script:
        grep -q "^begin-base64" "$Myname" &&
        sed -n -i '1,/^begin-base64/ { /^begin-base64/d;p }' "$Myname"
      # append Myname.c to the Myname script:
        zip -Drmq - "$Myname.c" | uuencode -m - >> "$Myname"
      # end the here doc:
      echo SOURCE >> "$Myname"
   fi
   # The main documentation of the script is needed to be put in the C source,
   # so isolate it in a temporary file 
   tmp=$(mktemp -t "$Myname-XXXXXXXXXX.doc")
   sed -n "/^= $Myname/,/^DOC/ { /^DOC/d;p }" "$Myname" |
     awk '{print $0}' ORS='\\n' > "$tmp"
     echo "\\" >> "$tmp"
   uudecode "$Myname" |
	zcat |
	sed -e "s/VERSION/$Version/" -e "/^GENDOC/{r $tmp" -e 'd}' |
	cc -lm -xc -o"$target" -
   Warn "created executable $target"
   # create the docs - but not everybody has the tools for this:
   if command -v gendoc &>/dev/null; then
      gendoc "$target"   # generate the docs
      scriptinfo -m "$target" | sed 's/bash/C/' > README.md
   fi
}

:<<'DOC' #---------------------------------------------------------------------
= excheck
synopsis:	 excheck executable1 [executable2...]
description:	check if all needed execs are there and getopt is GNU
DOC
#-------------------------------------------------------------------------------
excheck() {
   local ok=true i
   ((BASH_VERSINFO>=4)) || die "Need bash version >= 4"
   for i; do 
      command -v "$i" > /dev/null && continue
      Warn "Missing executable: $i"
      ok=false
   done
   $ok || die
   getopt -T 
   [[ $? -ne 4 ]] && die "Your getopt is not GNU"
}

:<<'DOC' #----------------------------------------------------------------------
= handle_options
synopsis:	 handle_options "$@"
description:	handle the options.
globals used:	 Myname Version
DOC
#-------------------------------------------------------------------------------
handle_options() {
   local options
   options=$(getopt \
      -n "$Myname" \
      -o IhHV \
      -- "$@"
   ) || exit 1
   eval set -- "$options"
   while true; do
      case $1 in
      (-h)  # print short help and exit
	    helpsrt
	    ;;
      (-H)  # print full documentation and exit
	    helpall
	    ;;
      (-V)  # print version and exit
	    echo $Version
	    exit
	    ;;
      (-I)  # installs the C program
	    installme
	    exit
	    ;;
      (--)  shift
	    break
	    ;;
      (*)   break
	    ;;
      esac
   done
}

excheck getopt make scriptinfo 
handle_options "$@"

:<<'SOURCE'

The code below contains, zipped and uuencoded, utf82html.c. On running
./utf82html -I, utf82html.c is produced and compiled on-the-fly.
If you need to edit utf82html.c, you'll need isolate it from the code below.
You can isolate it with:

   uudecode utf82html |zcat > utf82html.c

After the edit, if you leave it with the name utf82html.c, then running 

   utf82html -I

wil detect it, put it back in the script, and remove it, before installing.

begin-base64 644 -
UEsDBBQACAAIABe6P1IAAAAAAAAAAJsJAAALABwAdXRmODJodG1sLmNVVAkA
A00sF2BNLBdgdXgLAAEE6AMAAAToAwAAjVVtU9tGEP7uX7Eok1jCciw7QCiy
6TDEKZlJSQZovjhuRpZP1k3kk3o6AS64v727Osl6ATrVDOfj9tnd53b3dgcD
uI4z6TO4k1wpJoALGDnOASw28JUpJuHaW2csSmPRGQzgPE42kq9CBd7CE8tY
sCUhVcjAy1QYy07nFRd+lC0ZjFO15PHb8LRxJLlYNc98tUlYG7aM+ILOOrcx
X0LIoiSVyrTgoQMA6SZVbG0amQqOR6FaR9C/eEyRSl+k0B38OYHrjYgHNu0+
sNQfJN1cTKLBsmtYLllh91yZDu63NS9eFJVeggS5qsBEMnGmbON757fp5Ycv
552X9AMZr38QJzA/fvo8hX0ubNA7NGB1cqt+6ElYZMHswPnlCHowfD/PraX8
b/ZDQYQpmIDjdujsLuQRA3MvYHFgcmEVxCp0lnqLiNnANR4/0u9NkArzlia6
6eGBDUMbyB0CheaOH3FA4Vy702c8ALN0Bo+PubUxDI+sQo6fdolKKCvVsDzY
8wjoo/aOXBBLMPnEcYGPNQp3vV51LaIgFCi3Zk2kfEVl5oe29lnJBvuQyDhh
UnGWQhzAHzcf+8d5iFPYH1TAVHmK+/gjM1/BQ2V0zcWtF7m5VzJepMex8W/t
pT9d2NaokLMZBazGF78HGI7H722AkQ3Ove/QyhzY2k9RQ8zEOy2nNXgBhZk6
0PJ8PX4WNUJbh1qer/7zKLR1pOX5yp6i0Entltt6hKkg9qiOZnwOb1D/2LGs
1vWTTPkFxAYqdLch9mOhuMhY7bTmLS8JlddgEV81f1tmRWFtNGwRnYrNDq9z
ZcFkUj9rquK3wEfx021druW0qbSKVQz5OV/Ww+KHyHjH458WEbd1Pf2md6Di
Wbi64HDp9+32K2jctTfUsfcdC/YmOgntu73EtCRr4joewxE+a2hafRdYz6eG
CJBWOy//L0Rl96TWmds5hdHhoQW/gvHm1f1r5+DeNeCk+GeE/9hItM6kqpuy
OWknJ099YIdmUtpg8ChiKy8q+kDK/sqY8Nl3YdQNN5iR/yAIli5CqJ8YV9Ov
n8/Op79PL2/g/OLs6uz8ZnplVN2kDBBFh2NwMH+1gKzZ2k82FGCb6qPH857V
5zv/efIn1LBzWzg6qPWsPRy7Ju08ufJt3YX2cX87mxdzg/yRkIp8WNXKbuZQ
EGje6Gm18yeZyqQoOvy2NlRyW6d1U4WH29lwPnPm5Kfb70KjLNM7rvxwhxrO
20XreymDbtg9qUa2Ww3Kp8iLApmP3f9EfkNkkTjj9dtRgEm1v02vrj99uXxW
ceu2EqYHcZDgYwhwZojyFlgDsqqPfAImtYxWAQ6SJ9FtDj4cRDKWppGbJ5Nl
jvwoThmZLfUo+P2+S7+3vV6Vmypb286/UEsHCHqE6kALBAAAmwkAAFBLAQIe
AxQACAAIABe6P1J6hOpACwQAAJsJAAALABgAAAAAAAEAAACkgQAAAAB1dGY4
Mmh0bWwuY1VUBQADTSwXYHV4CwABBOgDAAAE6AMAAFBLBQYAAAAAAQABAFEA
AABgBAAAAAA=
====
SOURCE
